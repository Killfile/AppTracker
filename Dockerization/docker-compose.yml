version: '3.8'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: apptracker
      MYSQL_USER: appuser
      MYSQL_PASSWORD: appuserpassword
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - appnet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - appnet

  usermanagementapi:
    build:
      context: ../UserManagementAPI
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: usermanagementapi
    environment:
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - appnet
    volumes:
      - ../UserManagementAPI:/app:rw
    command: sh -c "if [ $DEV_MODE = 'true' ]; then FLASK_ENV=development flask run --host=0.0.0.0 --port=5000; else flask run --host=0.0.0.0 --port=5000; fi"

  usermanagementfrontend:
    build:
      context: ../UserManagementFrontend
      dockerfile: Dockerfile
    container_name: usermanagementfrontend
    ports:
      - "3000:80"
    depends_on:
      - usermanagementapi
    networks:
      - appnet
    volumes:
      - ../UserManagementFrontend:/app:rw
    environment:
      - CHOKIDAR_USEPOLLING=true

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    restart: always
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - appnet

  zookeeper:
    image: bitnami/zookeeper:3.8.4
    container_name: zookeeper
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - appnet

  worker_gmailingestion:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_gmailingestion
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__gmail_history_ingestor.py

  worker_keywordclassification:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_keywordclassification
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__keyword_classifier.py

  worker_timeshift:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_timeshift
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__timeshift.py

  worker_domaininterest:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_domaininterest
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__domain_interest.py

  worker_save_keyword_matches:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_save_keyword_matches
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__write_messages_to_db.py gmail-keyword-match

  worker_save_domain_matches:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_save_domain_matches
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__write_messages_to_db.py gmail-domain-interest

  worker_gmail_labeling:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_gmail_labeling
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - appnet
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__gmail_labeling.py

  worker__company_enrichment:
    build:
      context: ../GmailIngestionWorker
      dockerfile: Dockerfile
      args:
        DEV_MODE: ${DEV_MODE-false}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: worker_company_enrichment
    working_dir: /app  #probably
    depends_on:
      - mysql
    networks:
      - appnet
    environment:
      - DATABASE_URL=mysql+pymysql://appuser:appuserpassword@mysql:3306/apptracker
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - SCHEDULED_WORKER_MODULE=module__company_enrich
      - SCHEDULED_WORKER_INTERVAL=3600 #hourly
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ../GmailIngestionWorker:/app:rw
    command: python worker__scheduled_interval_wrapper.py 


volumes:
  mysql_data:

networks:
  appnet:
    driver: bridge
